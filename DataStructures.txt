Summary: An in-depth examination of the containers listed in Containers.txt

#1
@Array (Dynamic, Static)
@Linked-list (single, double)

#2
@HashTable (Linear Probing, Chaining)
@Tree (Binary)
@Graph (BFS, DFS, A*)

# Useful specializations
#3
@Queue
@Stack
@Circular Array/Annal (Records)
@Heap/Priority Queue

#4
@Bucket Array
@B-List
@Bloom Filter
@Skip List (Random height list to find stuff)
@DFA (Deterministic Finite Automaton, finite state machine)

#5
@Spacial Partitioning containers (Quad/Oct trees)
@DFA (Deterministic Finite Automaton, finite state machine)
@Bucket Array + HashTable hybrid for constant time Everything! @Ask Paul, I really want to have this in here
@Free List in a memory manager, basically an in-place linked list
@Arena Allocator (Add and drop memory)

#6
@ Threaded. Local and Global lookup optimization. Use mutexes less
@ Pools https://www.cs.tau.ac.il/~shanir/concurrent-data-structures.pdf 1.4 Can give perf benefits for threads
@

@Set
@Multiset <- Learn more about this before writing it




# Maybe?
// Balanced Trees. Conceptually borring, probably not included in Container's except
@AVL Tree
@Red-Black tree

